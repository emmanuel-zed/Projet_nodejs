{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 15000,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\naxiosInstance.interceptors.response.use(response => response.data, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n    message: 'Request failed'\n  });\n});\nexport const api = {\n  auth: {\n    register: async userData => {\n      try {\n        return await axiosInstance.post('/users/register', userData);\n      } catch (error) {\n        console.error('Registration error:', error);\n        throw error;\n      }\n    },\n    login: async credentials => axiosInstance.post('/users/login', credentials),\n    logout: async () => axiosInstance.post('/users/logout')\n  },\n  users: {\n    getProfile: async () => axiosInstance.get('/users/profile'),\n    deleteUser: async userId => axiosInstance.delete(`/users/delete/${userId}`),\n    updateProfile: async data => axiosInstance.put('/users/update', data)\n  },\n  admin: {\n    getUsers: async () => axiosInstance.get('/users'),\n    updateUser: async (userId, data) => axiosInstance.put(`/users/update/${userId}`, data),\n    deleteUser: async userId => axiosInstance.delete(`/users/delete/${userId}`),\n    getStats: async () => axiosInstance.get('/admin/stats')\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","timeout","headers","withCredentials","interceptors","response","use","data","error","_error$response","_error$response2","console","message","Promise","reject","api","auth","register","userData","post","login","credentials","logout","users","getProfile","get","deleteUser","userId","delete","updateProfile","put","admin","getUsers","updateUser","getStats"],"sources":["C:/Users/vanfl/CascadeProjects/Projet/user-management-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst axiosInstance = axios.create({\n    baseURL: API_URL,\n    timeout: 15000,\n    headers: { 'Content-Type': 'application/json' },\n    withCredentials: true,\n});\n\naxiosInstance.interceptors.response.use(\n    (response) => response.data,\n    (error) => {\n        console.error('API Error:', error.response?.data || error.message);\n        return Promise.reject(error.response?.data || { message: 'Request failed' });\n    }\n);\n\nexport const api = {\n    auth: {\n        register: async (userData) => {\n            try {\n                return await axiosInstance.post('/users/register', userData);\n            } catch (error) {\n                console.error('Registration error:', error);\n                throw error;\n            }\n        },\n        login: async (credentials) => axiosInstance.post('/users/login', credentials),\n        logout: async () => axiosInstance.post('/users/logout'),\n    },\n    users: {\n        getProfile: async () => axiosInstance.get('/users/profile'),\n        deleteUser: async (userId) => axiosInstance.delete(`/users/delete/${userId}`),\n        updateProfile: async (data) => axiosInstance.put('/users/update', data),\n    },\n    admin: {\n        getUsers: async () => axiosInstance.get('/users'),\n        updateUser: async (userId, data) => axiosInstance.put(`/users/update/${userId}`, data),\n        deleteUser: async (userId) => axiosInstance.delete(`/users/delete/${userId}`),\n        getStats: async () => axiosInstance.get('/admin/stats'),\n    },\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC/BC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB,CAAC;EAC/CC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEFL,aAAa,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CAClCD,QAAQ,IAAKA,QAAQ,CAACE,IAAI,EAC1BC,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACPC,OAAO,CAACH,KAAK,CAAC,YAAY,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACI,OAAO,CAAC;EAClE,OAAOC,OAAO,CAACC,MAAM,CAAC,EAAAJ,gBAAA,GAAAF,KAAK,CAACH,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBH,IAAI,KAAI;IAAEK,OAAO,EAAE;EAAiB,CAAC,CAAC;AAChF,CACJ,CAAC;AAED,OAAO,MAAMG,GAAG,GAAG;EACfC,IAAI,EAAE;IACFC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;MAC1B,IAAI;QACA,OAAO,MAAMpB,aAAa,CAACqB,IAAI,CAAC,iBAAiB,EAAED,QAAQ,CAAC;MAChE,CAAC,CAAC,OAAOV,KAAK,EAAE;QACZG,OAAO,CAACH,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,MAAMA,KAAK;MACf;IACJ,CAAC;IACDY,KAAK,EAAE,MAAOC,WAAW,IAAKvB,aAAa,CAACqB,IAAI,CAAC,cAAc,EAAEE,WAAW,CAAC;IAC7EC,MAAM,EAAE,MAAAA,CAAA,KAAYxB,aAAa,CAACqB,IAAI,CAAC,eAAe;EAC1D,CAAC;EACDI,KAAK,EAAE;IACHC,UAAU,EAAE,MAAAA,CAAA,KAAY1B,aAAa,CAAC2B,GAAG,CAAC,gBAAgB,CAAC;IAC3DC,UAAU,EAAE,MAAOC,MAAM,IAAK7B,aAAa,CAAC8B,MAAM,CAAC,iBAAiBD,MAAM,EAAE,CAAC;IAC7EE,aAAa,EAAE,MAAOtB,IAAI,IAAKT,aAAa,CAACgC,GAAG,CAAC,eAAe,EAAEvB,IAAI;EAC1E,CAAC;EACDwB,KAAK,EAAE;IACHC,QAAQ,EAAE,MAAAA,CAAA,KAAYlC,aAAa,CAAC2B,GAAG,CAAC,QAAQ,CAAC;IACjDQ,UAAU,EAAE,MAAAA,CAAON,MAAM,EAAEpB,IAAI,KAAKT,aAAa,CAACgC,GAAG,CAAC,iBAAiBH,MAAM,EAAE,EAAEpB,IAAI,CAAC;IACtFmB,UAAU,EAAE,MAAOC,MAAM,IAAK7B,aAAa,CAAC8B,MAAM,CAAC,iBAAiBD,MAAM,EAAE,CAAC;IAC7EO,QAAQ,EAAE,MAAAA,CAAA,KAAYpC,aAAa,CAAC2B,GAAG,CAAC,cAAc;EAC1D;AACJ,CAAC;AAED,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}