{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 15000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(response => response.data, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n    message: 'Request failed'\n  });\n});\nexport const api = {\n  auth: {\n    register: async userData => {\n      try {\n        return await axiosInstance.post('/users/register', userData);\n      } catch (error) {\n        console.error('Registration error:', error);\n        throw error;\n      }\n    },\n    login: async credentials => axiosInstance.post('/users/login', credentials),\n    logout: async () => axiosInstance.post('/users/logout')\n  },\n  users: {\n    getProfile: async () => axiosInstance.get('/users/profile'),\n    deleteUser: async userId => axiosInstance.delete(`/users/delete/${userId}`),\n    updateProfile: async data => axiosInstance.put('/users/update', data)\n  },\n  admin: {\n    getUsers: async () => axiosInstance.get('/users'),\n    updateUser: async (userId, data) => axiosInstance.put(`/users/update/${userId}`, data),\n    deleteUser: async userId => axiosInstance.delete(`/users/delete/${userId}`),\n    getStats: async () => axiosInstance.get('/admin/stats')\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","_error$response","_error$response2","console","message","api","auth","register","userData","post","login","credentials","logout","users","getProfile","get","deleteUser","userId","delete","updateProfile","put","admin","getUsers","updateUser","getStats"],"sources":["C:/Users/vanfl/CascadeProjects/Projet/user-management-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst axiosInstance = axios.create({\n    baseURL: API_URL,\n    timeout: 15000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\naxiosInstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\naxiosInstance.interceptors.response.use(\n    (response) => response.data,\n    (error) => {\n        console.error('API Error:', error.response?.data || error.message);\n        return Promise.reject(error.response?.data || { message: 'Request failed' });\n    }\n);\n\nexport const api = {\n    auth: {\n        register: async (userData) => {\n            try {\n                return await axiosInstance.post('/users/register', userData);\n            } catch (error) {\n                console.error('Registration error:', error);\n                throw error;\n            }\n        },\n        login: async (credentials) => axiosInstance.post('/users/login', credentials),\n        logout: async () => axiosInstance.post('/users/logout'),\n    },\n    users: {\n        getProfile: async () => axiosInstance.get('/users/profile'),\n        deleteUser: async (userId) => axiosInstance.delete(`/users/delete/${userId}`),\n        updateProfile: async (data) => axiosInstance.put('/users/update', data),\n    },\n    admin: {\n        getUsers: async () => axiosInstance.get('/users'),\n        updateUser: async (userId, data) => axiosInstance.put(`/users/update/${userId}`, data),\n        deleteUser: async (userId) => axiosInstance.delete(`/users/delete/${userId}`),\n        getStats: async () => axiosInstance.get('/admin/stats'),\n    },\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC/BC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEFJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAEDb,aAAa,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAClCS,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAC1BJ,KAAK,IAAK;EAAA,IAAAK,eAAA,EAAAC,gBAAA;EACPC,OAAO,CAACP,KAAK,CAAC,YAAY,EAAE,EAAAK,eAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBD,IAAI,KAAIJ,KAAK,CAACQ,OAAO,CAAC;EAClE,OAAOP,OAAO,CAACC,MAAM,CAAC,EAAAI,gBAAA,GAAAN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBF,IAAI,KAAI;IAAEI,OAAO,EAAE;EAAiB,CAAC,CAAC;AAChF,CACJ,CAAC;AAED,OAAO,MAAMC,GAAG,GAAG;EACfC,IAAI,EAAE;IACFC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;MAC1B,IAAI;QACA,OAAO,MAAMzB,aAAa,CAAC0B,IAAI,CAAC,iBAAiB,EAAED,QAAQ,CAAC;MAChE,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACZO,OAAO,CAACP,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,MAAMA,KAAK;MACf;IACJ,CAAC;IACDc,KAAK,EAAE,MAAOC,WAAW,IAAK5B,aAAa,CAAC0B,IAAI,CAAC,cAAc,EAAEE,WAAW,CAAC;IAC7EC,MAAM,EAAE,MAAAA,CAAA,KAAY7B,aAAa,CAAC0B,IAAI,CAAC,eAAe;EAC1D,CAAC;EACDI,KAAK,EAAE;IACHC,UAAU,EAAE,MAAAA,CAAA,KAAY/B,aAAa,CAACgC,GAAG,CAAC,gBAAgB,CAAC;IAC3DC,UAAU,EAAE,MAAOC,MAAM,IAAKlC,aAAa,CAACmC,MAAM,CAAC,iBAAiBD,MAAM,EAAE,CAAC;IAC7EE,aAAa,EAAE,MAAOnB,IAAI,IAAKjB,aAAa,CAACqC,GAAG,CAAC,eAAe,EAAEpB,IAAI;EAC1E,CAAC;EACDqB,KAAK,EAAE;IACHC,QAAQ,EAAE,MAAAA,CAAA,KAAYvC,aAAa,CAACgC,GAAG,CAAC,QAAQ,CAAC;IACjDQ,UAAU,EAAE,MAAAA,CAAON,MAAM,EAAEjB,IAAI,KAAKjB,aAAa,CAACqC,GAAG,CAAC,iBAAiBH,MAAM,EAAE,EAAEjB,IAAI,CAAC;IACtFgB,UAAU,EAAE,MAAOC,MAAM,IAAKlC,aAAa,CAACmC,MAAM,CAAC,iBAAiBD,MAAM,EAAE,CAAC;IAC7EO,QAAQ,EAAE,MAAAA,CAAA,KAAYzC,aAAa,CAACgC,GAAG,CAAC,cAAc;EAC1D;AACJ,CAAC;AAED,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}